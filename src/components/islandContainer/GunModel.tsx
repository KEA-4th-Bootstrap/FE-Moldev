/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf 
Author: Wicxes (https://sketchfab.com/Wicxes)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/water-gun-23ee185e955a459d8c396e2afa865085
Title: Water gun
*/

import { useCallback } from 'react';
import { useGLTF } from '@react-three/drei';
import { Group, Mesh } from 'three';
import gsap from 'gsap';
import { useNavigate } from 'react-router';

const useGettingRef = () => {
  const ref = useCallback((node: Group) => {
    if (node !== null) {
      gsap.to(node.position, {
        x: -8,
        y: 2,
        z: 2,
        duration: 10,
        repeat: -1,
        yoyo: true,
        ease: 'power1.inOut',
      });
      gsap.fromTo(
        node.rotation,
        {
          x: Math.PI / 2,
          y: Math.PI / 2,
          z: 0,
        },
        {
          x: -Math.PI * 2,
          y: Math.PI * 1,
          z: Math.PI * 2,
          duration: 30,
          repeat: -1,
          ease: 'power1.inOut',
          yoyo: true,
        },
      );
    }
  }, []);

  return [ref];
};

export function GunModel(
  props: JSX.IntrinsicElements['group'] & {
    setHover: (hover: boolean) => void;
    isHover: boolean;
    moldevId: string;
  },
) {
  const navigation = useNavigate();
  const [group] = useGettingRef();
  const { nodes, materials } = useGLTF('/models/gun/scene.gltf');

  return (
    <group
      ref={group as any}
      {...props}
      dispose={null}
      onPointerEnter={() => props.setHover(true)}
      onPointerOut={() => props.setHover(false)}
      position={[-10, 1, 0]}
      scale={props.isHover ? 7 : 6}
      onClick={() => navigation(`/island/${props.moldevId}/trouble`)}
    >
      <mesh
        geometry={(nodes.Object_4 as Mesh).geometry}
        material={materials.yellow_rough_plastic}
        position={[0, 0.13, 0.2]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        geometry={(nodes.Object_6 as Mesh).geometry}
        material={materials.blue_plastic}
        position={[0, 0.13, 0.1]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        geometry={(nodes.Object_8 as Mesh).geometry}
        material={materials.pink_plastic}
        position={[0, 0.13, 0.09]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={(nodes.Object_10 as Mesh).geometry}
        material={materials.blue_plastic}
        position={[0, 0.13, 0.09]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.07}
      />
      <mesh
        geometry={(nodes.Object_12 as Mesh).geometry}
        material={materials.pink_plastic}
        position={[0.165, 0.13, -0.168]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[-0.038, 0.038, 0.038]}
      />
      <mesh
        geometry={(nodes.Object_14 as Mesh).geometry}
        material={materials.pink_plastic}
        position={[0.27, 0.13, 0.142]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[-0.039, 0.012, 0.036]}
      />
      <mesh
        geometry={(nodes.Object_16 as Mesh).geometry}
        material={materials.blue_plastic}
        position={[0.281, 0.13, 0.098]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.025}
      />
      <mesh
        geometry={(nodes.Object_18 as Mesh).geometry}
        material={materials.red_plastic}
        position={[0.281, 0.13, 0.093]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.015}
      />
      <mesh
        geometry={(nodes.Object_20 as Mesh).geometry}
        material={materials.pink_plastic}
        position={[0.156, 0.181, 0.169]}
        rotation={[Math.PI / 2, 0, Math.PI]}
      />
    </group>
  );
}

useGLTF.preload('/models/gun/scene.gltf');
